Next larger element
Send Feedback
Given a generic tree and an integer n. Find and return the node with next larger element in the Tree i.e. find a node with value just greater than n.
Return NULL if no node is present with value greater than n.
Input format :

Line 1 : Integer n

Line 2 : Elements in level order form separated by space (as per done in class). Order is -

Root_data, n (No_Of_Child_Of_Root), n children, and so on for every element

Output format : Node with value just greater than n.

Sample Input 1 :
18
10 3 20 30 40 2 40 50 0 0 0 0 
Sample Output 1 :
20
Sample Input 2 :
21
10 3 20 30 40 2 40 50 0 0 0 0 
Sample Output 2:
30



/////////////////////======================================>>>>>>>>>>>>>>>>>>>>>>>>>>>



public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/
	public static TreeNode<Integer> resNode;

	public static void findNextLargerHelper(TreeNode<Integer> root, int target) {
		if (root == null)
			return;

		if (root.data > target) {
          if ((resNode == null || resNode.data > root.data))
            resNode = root;
		}
		for (TreeNode<Integer> child : root.children) {
			findNextLargerHelper(child, target);
		}
	}

	public static TreeNode<Integer> findNextLargerNode(TreeNode<Integer> root, int n){
		resNode = null;
       
	   findNextLargerHelper(root, n);
	   return resNode;
	}
	
}
